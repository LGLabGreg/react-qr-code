{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/glebret/github/react-qr-code/apps/docs/apps/docs/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/glebret/github/react-qr-code/apps/docs/apps/docs/src/components/ui/typography.tsx"],"sourcesContent":["import { type ReactNode } from 'react'\n\nimport { cn } from '@/lib/utils'\n\ninterface TypographyProps extends React.HTMLProps<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\ninterface TypographyListItem {\n  key: React.Key\n  content: string | React.ReactNode\n}\n\ninterface TypographyListProps extends TypographyProps {\n  items: TypographyListItem[]\n}\n\nexport function TypographyH1({ children, className }: TypographyProps) {\n  return (\n    <h1 className={cn('scroll-m-20 text-3xl font-bold tracking-tight', className)}>\n      {children}\n    </h1>\n  )\n}\n\nexport function TypographyH2({ children, className }: TypographyProps) {\n  return (\n    <h2\n      className={cn(\n        'scroll-m-20 text-xl font-semibold tracking-tight first:mt-0 mb-3',\n        className,\n      )}\n    >\n      {children}\n    </h2>\n  )\n}\n\nexport function TypographyH3({ children, className }: TypographyProps) {\n  return (\n    <h3\n      className={cn('scroll-m-20 text-xl font-semibold tracking-tight mb-3', className)}\n    >\n      {children}\n    </h3>\n  )\n}\n\nexport function TypographyH4({ children, className }: TypographyProps) {\n  return (\n    <h4\n      className={cn('scroll-m-20 text-lg font-semibold tracking-tight mb-2', className)}\n    >\n      {children}\n    </h4>\n  )\n}\n\nexport function TypographyP({ children, className }: TypographyProps) {\n  return <p className={cn('leading-7 mb-6', className)}>{children}</p>\n}\n\nexport function TypographyBlockquote({ children, className }: TypographyProps) {\n  return (\n    <blockquote className={cn('mt-6 border-l-2 pl-6 italic', className)}>\n      {children}\n    </blockquote>\n  )\n}\n\nexport function TypographyList({ items, className }: TypographyListProps) {\n  return (\n    <ul className={cn('mb-6 ml-6 list-disc [&>li]:mt-2', className)}>\n      {items.map(({ key, content }) => (\n        <li key={key}>{content}</li>\n      ))}\n    </ul>\n  )\n}\n\nexport function TypographyInlineCode({ children, className }: TypographyProps) {\n  return (\n    <code\n      className={cn(\n        'relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold',\n        className,\n      )}\n    >\n      {children}\n    </code>\n  )\n}\n\nexport function TypographyLead({ children, className }: TypographyProps) {\n  return <p className={cn('text-xl text-muted-foreground', className)}>{children}</p>\n}\n\nexport function TypographyLarge({ children, className }: TypographyProps) {\n  return <div className={cn('text-lg font-semibold', className)}>{children}</div>\n}\n\nexport function TypographySmall({ children, className }: TypographyProps) {\n  return (\n    <small className={cn('text-sm font-medium leading-none', className)}>\n      {children}\n    </small>\n  )\n}\n\nexport function TypographyBold({ children, className }: TypographyProps) {\n  return <span className={cn('font-semibold', className)}>{children}</span>\n}\n\nexport function Bold(props: TypographyProps) {\n  return <TypographyBold {...props} />\n}\n\nexport function TypographyMuted({ children, className }: TypographyProps) {\n  return <p className={cn('text-sm text-muted-foreground', className)}>{children}</p>\n}\n\ninterface TypographyTableRow {\n  key: React.Key\n  items: string[]\n}\n\nexport function TypographyTable({\n  headers,\n  rows,\n}: {\n  headers: string[]\n  rows: TypographyTableRow[]\n}) {\n  return (\n    <div className='my-6 w-full overflow-y-auto'>\n      <table className='w-full'>\n        <thead>\n          <tr className='m-0 border-t p-0 even:bg-muted'>\n            {headers.map((header) => (\n              <th\n                key={header}\n                className='border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right'\n              >\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map(({ key, items }) => (\n            <tr className='m-0 border-t p-0 even:bg-muted' key={key}>\n              {items.map((item) => (\n                <td\n                  key={item}\n                  className='border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right'\n                >\n                  {item}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport const LabelValue = ({ label, value }: { label: ReactNode; value: ReactNode }) => {\n  return (\n    <div>\n      <div className='text-xs text-muted-foreground'>{label}</div>\n      <div className='font-medium'>{value}</div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/glebret/github/react-qr-code/apps/docs/apps/docs/src/components/page-heading.tsx"],"sourcesContent":["import { type ReactNode } from 'react'\n\nimport { TypographyH1 } from './ui/typography'\n\ninterface PageHeaderProps {\n  heading: string\n  subheading?: string\n  callToAction?: ReactNode\n}\n\nexport const PageHeading = ({\n  heading,\n  subheading,\n  callToAction: CallToAction,\n}: PageHeaderProps) => {\n  return (\n    <div className='flex items-center justify-between mb-6 border-b pb-3'>\n      <div className='space-y-1'>\n        <TypographyH1>{heading}</TypographyH1>\n        {subheading && <p className='text-muted-foreground'>{subheading}</p>}\n      </div>\n      {CallToAction && CallToAction}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAQO,MAAM,cAAc,CAAC,EAC1B,OAAO,EACP,UAAU,EACV,cAAc,YAAY,EACV;IAChB,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;gBAAI,WAAU;;kCACb,+YAAC,sJAAA,CAAA,eAAY;kCAAE;;;;;;oBACd,4BAAc,+YAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAEtD,gBAAgB;;;;;;;AAGvB"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///home/glebret/github/react-qr-code/apps/docs/apps/docs/src/app/page.tsx"],"sourcesContent":["import { type PropsWithChildren } from 'react'\nimport { FaCheckSquare } from 'react-icons/fa'\n\nimport { PageHeading } from '@/components/page-heading'\nimport {\n  TypographyBold,\n  TypographyH2,\n  TypographyList,\n  TypographyP,\n} from '@/components/ui/typography'\n\nexport default function Page() {\n  const Check = () => <FaCheckSquare color='#1dc355' size={24} />\n  const ListItem = ({ children }: PropsWithChildren) => (\n    <div className='flex items-center gap-2'>\n      <Check />\n      {children}\n    </div>\n  )\n  return (\n    <>\n      <PageHeading heading='Overview' />\n      <TypographyH2>The Ultimate Customizable QR Code Generator for React</TypographyH2>\n      <TypographyP>\n        Welcome to <TypographyBold>@lglab/react-qr-code</TypographyBold>, the modern,\n        high-performance QR code generator built for React developers. Designed for\n        flexibility, this library lets you create highly customizable QR codes with\n        advanced styling options.\n      </TypographyP>\n\n      <TypographyList\n        className='p-0 list-none'\n        items={[\n          {\n            key: 'Customizable',\n            content: (\n              <ListItem>\n                <div>\n                  <span className='font-semibold'>Highly Customizable</span> - Style the\n                  finder patterns, modules, and colors exactly how you want.\n                </div>\n              </ListItem>\n            ),\n          },\n          {\n            key: 'Performance',\n            content: (\n              <ListItem>\n                <div>\n                  <span className='font-semibold'>Performance Optimized</span> - Generates\n                  QR codes efficiently without sacrificing quality.\n                </div>\n              </ListItem>\n            ),\n          },\n          {\n            key: 'SVG',\n            content: (\n              <ListItem>\n                <div>\n                  <span className='font-semibold'>SVG-Based Rendering</span> - Crisp and\n                  scalable output for web and print\n                </div>\n              </ListItem>\n            ),\n          },\n          {\n            key: 'Developer-Friendly',\n            content: (\n              <ListItem>\n                <div>\n                  <span className='font-semibold'>Developer-Friendly</span> - Built with\n                  TypeScript, easy to use, and well-documented\n                </div>\n              </ListItem>\n            ),\n          },\n        ]}\n      ></TypographyList>\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;;AAUe,SAAS;IACtB,MAAM,QAAQ,kBAAM,+YAAC,+NAAA,CAAA,gBAAa;YAAC,OAAM;YAAU,MAAM;;;;;;IACzD,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAqB,iBAC/C,+YAAC;YAAI,WAAU;;8BACb,+YAAC;;;;;gBACA;;;;;;;IAGL,qBACE;;0BACE,+YAAC,qJAAA,CAAA,cAAW;gBAAC,SAAQ;;;;;;0BACrB,+YAAC,sJAAA,CAAA,eAAY;0BAAC;;;;;;0BACd,+YAAC,sJAAA,CAAA,cAAW;;oBAAC;kCACA,+YAAC,sJAAA,CAAA,iBAAc;kCAAC;;;;;;oBAAqC;;;;;;;0BAMlE,+YAAC,sJAAA,CAAA,iBAAc;gBACb,WAAU;gBACV,OAAO;oBACL;wBACE,KAAK;wBACL,uBACE,+YAAC;sCACC,cAAA,+YAAC;;kDACC,+YAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAA0B;;;;;;;;;;;;oBAKlE;oBACA;wBACE,KAAK;wBACL,uBACE,+YAAC;sCACC,cAAA,+YAAC;;kDACC,+YAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAA4B;;;;;;;;;;;;oBAKpE;oBACA;wBACE,KAAK;wBACL,uBACE,+YAAC;sCACC,cAAA,+YAAC;;kDACC,+YAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAA0B;;;;;;;;;;;;oBAKlE;oBACA;wBACE,KAAK;wBACL,uBACE,+YAAC;sCACC,cAAA,+YAAC;;kDACC,+YAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAAyB;;;;;;;;;;;;oBAKjE;iBACD;;;;;;;;AAIT"}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}